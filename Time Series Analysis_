{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"ZrTO0NF28iBr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731596079912,"user_tz":0,"elapsed":8310,"user":{"displayName":"Emmanuel Ofosu-Hene Twumasi","userId":"08523353202333273606"}},"outputId":"49f3e3f4-d939-4248-eca2-daca7e4b56e5"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pmdarima\n","  Downloading pmdarima-2.0.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl.metadata (7.8 kB)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.10/dist-packages (from pmdarima) (1.4.2)\n","Requirement already satisfied: Cython!=0.29.18,!=0.29.31,>=0.29 in /usr/local/lib/python3.10/dist-packages (from pmdarima) (3.0.11)\n","Requirement already satisfied: numpy>=1.21.2 in /usr/local/lib/python3.10/dist-packages (from pmdarima) (1.26.4)\n","Requirement already satisfied: pandas>=0.19 in /usr/local/lib/python3.10/dist-packages (from pmdarima) (2.2.2)\n","Requirement already satisfied: scikit-learn>=0.22 in /usr/local/lib/python3.10/dist-packages (from pmdarima) (1.5.2)\n","Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.10/dist-packages (from pmdarima) (1.13.1)\n","Requirement already satisfied: statsmodels>=0.13.2 in /usr/local/lib/python3.10/dist-packages (from pmdarima) (0.14.4)\n","Requirement already satisfied: urllib3 in /usr/local/lib/python3.10/dist-packages (from pmdarima) (2.2.3)\n","Requirement already satisfied: setuptools!=50.0.0,>=38.6.0 in /usr/local/lib/python3.10/dist-packages (from pmdarima) (75.1.0)\n","Requirement already satisfied: packaging>=17.1 in /usr/local/lib/python3.10/dist-packages (from pmdarima) (24.2)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.19->pmdarima) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.19->pmdarima) (2024.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.19->pmdarima) (2024.2)\n","Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.22->pmdarima) (3.5.0)\n","Requirement already satisfied: patsy>=0.5.6 in /usr/local/lib/python3.10/dist-packages (from statsmodels>=0.13.2->pmdarima) (0.5.6)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from patsy>=0.5.6->statsmodels>=0.13.2->pmdarima) (1.16.0)\n","Downloading pmdarima-2.0.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl (2.1 MB)\n","\u001b[?25l   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/2.1 MB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K   \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m \u001b[32m2.1/2.1 MB\u001b[0m \u001b[31m68.7 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.1/2.1 MB\u001b[0m \u001b[31m44.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: pmdarima\n","Successfully installed pmdarima-2.0.4\n"]}],"source":["!pip install pmdarima\n"]},{"cell_type":"markdown","source":[],"metadata":{"id":"nGBrGnobKo2Q"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import yfinance as yf\n","import statsmodels.api as sm\n","import sklearn\n","import plotly.express as px\n","from statsmodels.tsa.stattools import adfuller\n","from scipy.fft import fft\n","from scipy import fftpack\n","from datetime import datetime\n","from statsmodels.tsa.stattools import kpss\n","from statsmodels.tsa.seasonal import seasonal_decompose\n","from scipy.stats import boxcox\n","from statsmodels.tsa.arima.model import ARIMA\n","from statsmodels.graphics.tsaplots import plot_acf\n","from statsmodels.graphics.tsaplots import plot_pacf\n","from pmdarima import auto_arima\n","import warnings\n","warnings.filterwarnings(\"ignore\")\n","warnings.filterwarnings(\"ignore\", category=UserWarning)\n","from sklearn.metrics import mean_absolute_error, mean_squared_error\n","from prophet import Prophet\n"],"metadata":{"id":"OLg4TsPmZ2LW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Define the ticker symbol for Microsoft\n","ticker = \"MSFT\"\n","\n","# Define the start and end dates for the data\n","start_date = \"2010-01-01\"\n","end_date = \"2023-12-31\"\n","\n","# Download the data using yfinance\n","data = yf.download(ticker, start=start_date, end=end_date)\n","\n","# Save the data to a CSV file (optional)\n","data.to_csv(\"Microsoft_Stock.csv\")\n","\n","# Display the first few rows of the data\n","data.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"qH_KOH7AaMvX","executionInfo":{"status":"error","timestamp":1731608404743,"user_tz":0,"elapsed":942,"user":{"displayName":"Emmanuel Ofosu-Hene Twumasi","userId":"08523353202333273606"}},"outputId":"936b1320-83b3-4f05-937a-091af4da92f5"},"execution_count":1,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'yf' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-5a6c039917ef>\u001b[0m in \u001b[0;36m<cell line: 9>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;31m# Download the data using yfinance\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 9\u001b[0;31m \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0myf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdownload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mticker\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstart\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstart_date\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mend\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mend_date\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;31m# Save the data to a CSV file (optional)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'yf' is not defined"]}]},{"cell_type":"code","source":["data.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"VzQeYBQvaXmW","executionInfo":{"status":"ok","timestamp":1730828419513,"user_tz":0,"elapsed":436,"user":{"displayName":"Timo Parker","userId":"11961905666203941570"}},"outputId":"1ad17797-803c-4384-bc72-99cb738cb77f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Price                       Adj Close       Close        High         Low  \\\n","Ticker                           MSFT        MSFT        MSFT        MSFT   \n","Date                                                                        \n","2023-12-22 00:00:00+00:00  372.543915  374.579987  375.179993  372.709991   \n","2023-12-26 00:00:00+00:00  372.623505  374.660004  376.940002  373.500000   \n","2023-12-27 00:00:00+00:00  372.036713  374.070007  375.059998  372.809998   \n","2023-12-28 00:00:00+00:00  373.240112  375.279999  376.459991  374.160004   \n","2023-12-29 00:00:00+00:00  373.995972  376.040009  377.160004  373.480011   \n","\n","Price                            Open    Volume  \n","Ticker                           MSFT      MSFT  \n","Date                                             \n","2023-12-22 00:00:00+00:00  373.679993  17091100  \n","2023-12-26 00:00:00+00:00  375.000000  12673100  \n","2023-12-27 00:00:00+00:00  373.690002  14905400  \n","2023-12-28 00:00:00+00:00  375.369995  14327000  \n","2023-12-29 00:00:00+00:00  376.000000  18723000  "],"text/html":["\n","  <div id=\"df-64bf1f9c-45ee-400d-8bb0-6ba0453f5911\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","\n","    .dataframe thead tr:last-of-type th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th>Price</th>\n","      <th>Adj Close</th>\n","      <th>Close</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Open</th>\n","      <th>Volume</th>\n","    </tr>\n","    <tr>\n","      <th>Ticker</th>\n","      <th>MSFT</th>\n","      <th>MSFT</th>\n","      <th>MSFT</th>\n","      <th>MSFT</th>\n","      <th>MSFT</th>\n","      <th>MSFT</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2023-12-22 00:00:00+00:00</th>\n","      <td>372.543915</td>\n","      <td>374.579987</td>\n","      <td>375.179993</td>\n","      <td>372.709991</td>\n","      <td>373.679993</td>\n","      <td>17091100</td>\n","    </tr>\n","    <tr>\n","      <th>2023-12-26 00:00:00+00:00</th>\n","      <td>372.623505</td>\n","      <td>374.660004</td>\n","      <td>376.940002</td>\n","      <td>373.500000</td>\n","      <td>375.000000</td>\n","      <td>12673100</td>\n","    </tr>\n","    <tr>\n","      <th>2023-12-27 00:00:00+00:00</th>\n","      <td>372.036713</td>\n","      <td>374.070007</td>\n","      <td>375.059998</td>\n","      <td>372.809998</td>\n","      <td>373.690002</td>\n","      <td>14905400</td>\n","    </tr>\n","    <tr>\n","      <th>2023-12-28 00:00:00+00:00</th>\n","      <td>373.240112</td>\n","      <td>375.279999</td>\n","      <td>376.459991</td>\n","      <td>374.160004</td>\n","      <td>375.369995</td>\n","      <td>14327000</td>\n","    </tr>\n","    <tr>\n","      <th>2023-12-29 00:00:00+00:00</th>\n","      <td>373.995972</td>\n","      <td>376.040009</td>\n","      <td>377.160004</td>\n","      <td>373.480011</td>\n","      <td>376.000000</td>\n","      <td>18723000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-64bf1f9c-45ee-400d-8bb0-6ba0453f5911')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-64bf1f9c-45ee-400d-8bb0-6ba0453f5911 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-64bf1f9c-45ee-400d-8bb0-6ba0453f5911');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-940a2300-aecb-4d51-8483-19cef39115f6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-940a2300-aecb-4d51-8483-19cef39115f6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-940a2300-aecb-4d51-8483-19cef39115f6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": [\n        \"Date\",\n        \"\"\n      ],\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-12-22 00:00:00+00:00\",\n        \"max\": \"2023-12-29 00:00:00+00:00\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2023-12-26 00:00:00+00:00\",\n          \"2023-12-29 00:00:00+00:00\",\n          \"2023-12-27 00:00:00+00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Adj Close\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7524338661202227,\n        \"min\": 372.0367126464844,\n        \"max\": 373.9959716796875,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          372.6235046386719,\n          373.9959716796875,\n          372.0367126464844\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Close\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7565601395184526,\n        \"min\": 374.07000732421875,\n        \"max\": 376.0400085449219,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          374.6600036621094,\n          376.0400085449219,\n          374.07000732421875\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"High\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.983466538900036,\n        \"min\": 375.05999755859375,\n        \"max\": 377.1600036621094,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          376.94000244140625,\n          377.1600036621094,\n          375.05999755859375\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Low\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.590572285018437,\n        \"min\": 372.7099914550781,\n        \"max\": 374.1600036621094,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          373.5,\n          373.4800109863281,\n          372.80999755859375\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Open\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0341523587413568,\n        \"min\": 373.67999267578125,\n        \"max\": 376.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          375.0,\n          376.0,\n          373.69000244140625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Volume\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2378577,\n        \"min\": 12673100,\n        \"max\": 18723000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          12673100,\n          18723000,\n          14905400\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"Ylq67qADadE1","executionInfo":{"status":"ok","timestamp":1730828461101,"user_tz":0,"elapsed":364,"user":{"displayName":"Timo Parker","userId":"11961905666203941570"}},"outputId":"60b0b1a6-700a-498f-e5c2-32055a150f77"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Price                      Adj Close      Close       High        Low  \\\n","Ticker                          MSFT       MSFT       MSFT       MSFT   \n","Date                                                                    \n","2010-01-04 00:00:00+00:00  23.347326  30.950001  31.100000  30.590000   \n","2010-01-05 00:00:00+00:00  23.354864  30.959999  31.100000  30.639999   \n","2010-01-06 00:00:00+00:00  23.211536  30.770000  31.080000  30.520000   \n","2010-01-07 00:00:00+00:00  22.970140  30.450001  30.700001  30.190001   \n","2010-01-08 00:00:00+00:00  23.128555  30.660000  30.879999  30.240000   \n","\n","Price                           Open    Volume  \n","Ticker                          MSFT      MSFT  \n","Date                                            \n","2010-01-04 00:00:00+00:00  30.620001  38409100  \n","2010-01-05 00:00:00+00:00  30.850000  49749600  \n","2010-01-06 00:00:00+00:00  30.879999  58182400  \n","2010-01-07 00:00:00+00:00  30.629999  50559700  \n","2010-01-08 00:00:00+00:00  30.280001  51197400  "],"text/html":["\n","  <div id=\"df-94cdaf0b-335d-4422-a13e-2dbf72ac43c1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","\n","    .dataframe thead tr:last-of-type th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th>Price</th>\n","      <th>Adj Close</th>\n","      <th>Close</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Open</th>\n","      <th>Volume</th>\n","    </tr>\n","    <tr>\n","      <th>Ticker</th>\n","      <th>MSFT</th>\n","      <th>MSFT</th>\n","      <th>MSFT</th>\n","      <th>MSFT</th>\n","      <th>MSFT</th>\n","      <th>MSFT</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2010-01-04 00:00:00+00:00</th>\n","      <td>23.347326</td>\n","      <td>30.950001</td>\n","      <td>31.100000</td>\n","      <td>30.590000</td>\n","      <td>30.620001</td>\n","      <td>38409100</td>\n","    </tr>\n","    <tr>\n","      <th>2010-01-05 00:00:00+00:00</th>\n","      <td>23.354864</td>\n","      <td>30.959999</td>\n","      <td>31.100000</td>\n","      <td>30.639999</td>\n","      <td>30.850000</td>\n","      <td>49749600</td>\n","    </tr>\n","    <tr>\n","      <th>2010-01-06 00:00:00+00:00</th>\n","      <td>23.211536</td>\n","      <td>30.770000</td>\n","      <td>31.080000</td>\n","      <td>30.520000</td>\n","      <td>30.879999</td>\n","      <td>58182400</td>\n","    </tr>\n","    <tr>\n","      <th>2010-01-07 00:00:00+00:00</th>\n","      <td>22.970140</td>\n","      <td>30.450001</td>\n","      <td>30.700001</td>\n","      <td>30.190001</td>\n","      <td>30.629999</td>\n","      <td>50559700</td>\n","    </tr>\n","    <tr>\n","      <th>2010-01-08 00:00:00+00:00</th>\n","      <td>23.128555</td>\n","      <td>30.660000</td>\n","      <td>30.879999</td>\n","      <td>30.240000</td>\n","      <td>30.280001</td>\n","      <td>51197400</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-94cdaf0b-335d-4422-a13e-2dbf72ac43c1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-94cdaf0b-335d-4422-a13e-2dbf72ac43c1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-94cdaf0b-335d-4422-a13e-2dbf72ac43c1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-804af8af-f9a8-4cfe-ac2e-79ab94937cae\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-804af8af-f9a8-4cfe-ac2e-79ab94937cae')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-804af8af-f9a8-4cfe-ac2e-79ab94937cae button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 3522,\n  \"fields\": [\n    {\n      \"column\": [\n        \"Date\",\n        \"\"\n      ],\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-01-04 00:00:00+00:00\",\n        \"max\": \"2023-12-29 00:00:00+00:00\",\n        \"num_unique_values\": 3522,\n        \"samples\": [\n          \"2022-08-30 00:00:00+00:00\",\n          \"2017-06-30 00:00:00+00:00\",\n          \"2021-10-14 00:00:00+00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Adj Close\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 102.09843205107991,\n        \"min\": 17.517589569091797,\n        \"max\": 380.61981201171875,\n        \"num_unique_values\": 3341,\n        \"samples\": [\n          23.676240921020508,\n          104.72845458984375,\n          22.793224334716797\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Close\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 101.83707098643988,\n        \"min\": 23.010000228881836,\n        \"max\": 382.70001220703125,\n        \"num_unique_values\": 2966,\n        \"samples\": [\n          304.3599853515625,\n          44.27000045776367,\n          138.88999938964844\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"High\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 102.85563121088869,\n        \"min\": 23.31999969482422,\n        \"max\": 384.29998779296875,\n        \"num_unique_values\": 2943,\n        \"samples\": [\n          47.970001220703125,\n          56.099998474121094,\n          297.5400085449219\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Low\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 100.71464493881665,\n        \"min\": 22.729999542236328,\n        \"max\": 378.1600036621094,\n        \"num_unique_values\": 2973,\n        \"samples\": [\n          290.2699890136719,\n          344.30999755859375,\n          212.85000610351562\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Open\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 101.8024913641519,\n        \"min\": 23.09000015258789,\n        \"max\": 383.760009765625,\n        \"num_unique_values\": 2984,\n        \"samples\": [\n          304.4200134277344,\n          86.30000305175781,\n          48.63999938964844\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Volume\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21056070,\n        \"min\": 7425600,\n        \"max\": 319317900,\n        \"num_unique_values\": 3510,\n        \"samples\": [\n          26660300,\n          35433700,\n          20184800\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a2ZHbnODawEN","executionInfo":{"status":"ok","timestamp":1730828515451,"user_tz":0,"elapsed":518,"user":{"displayName":"Timo Parker","userId":"11961905666203941570"}},"outputId":"485a306f-7d5a-4958-fb69-5a04ebfca277"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","DatetimeIndex: 3522 entries, 2010-01-04 00:00:00+00:00 to 2023-12-29 00:00:00+00:00\n","Data columns (total 6 columns):\n"," #   Column             Non-Null Count  Dtype  \n","---  ------             --------------  -----  \n"," 0   (Adj Close, MSFT)  3522 non-null   float64\n"," 1   (Close, MSFT)      3522 non-null   float64\n"," 2   (High, MSFT)       3522 non-null   float64\n"," 3   (Low, MSFT)        3522 non-null   float64\n"," 4   (Open, MSFT)       3522 non-null   float64\n"," 5   (Volume, MSFT)     3522 non-null   int64  \n","dtypes: float64(5), int64(1)\n","memory usage: 192.6 KB\n"]}]},{"cell_type":"code","source":["data.describe(include='all')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":332},"id":"MPF8R_mSa1KQ","executionInfo":{"status":"ok","timestamp":1730828580720,"user_tz":0,"elapsed":509,"user":{"displayName":"Timo Parker","userId":"11961905666203941570"}},"outputId":"0081a349-9fa9-4cbf-adb1-b6cc083ad2b7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Price     Adj Close        Close         High          Low         Open  \\\n","Ticker         MSFT         MSFT         MSFT         MSFT         MSFT   \n","count   3522.000000  3522.000000  3522.000000  3522.000000  3522.000000   \n","mean     109.385253   115.293921   116.392172   114.081403   115.253336   \n","std      102.098432   101.837071   102.855631   100.714645   101.802491   \n","min       17.517590    23.010000    23.320000    22.730000    23.090000   \n","25%       27.272247    33.022500    33.335001    32.660001    32.930000   \n","50%       56.900787    62.660000    63.100000    62.289999    62.700001   \n","75%      193.937420   201.122501   203.549995   197.272495   200.000004   \n","max      380.619812   382.700012   384.299988   378.160004   383.760010   \n","\n","Price         Volume  \n","Ticker          MSFT  \n","count   3.522000e+03  \n","mean    3.727788e+07  \n","std     2.105607e+07  \n","min     7.425600e+06  \n","25%     2.352038e+07  \n","50%     3.141700e+07  \n","75%     4.576332e+07  \n","max     3.193179e+08  "],"text/html":["\n","  <div id=\"df-1a1a41cd-af06-48f3-9daf-8d585ca73370\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th>Price</th>\n","      <th>Adj Close</th>\n","      <th>Close</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Open</th>\n","      <th>Volume</th>\n","    </tr>\n","    <tr>\n","      <th>Ticker</th>\n","      <th>MSFT</th>\n","      <th>MSFT</th>\n","      <th>MSFT</th>\n","      <th>MSFT</th>\n","      <th>MSFT</th>\n","      <th>MSFT</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>3522.000000</td>\n","      <td>3522.000000</td>\n","      <td>3522.000000</td>\n","      <td>3522.000000</td>\n","      <td>3522.000000</td>\n","      <td>3.522000e+03</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>109.385253</td>\n","      <td>115.293921</td>\n","      <td>116.392172</td>\n","      <td>114.081403</td>\n","      <td>115.253336</td>\n","      <td>3.727788e+07</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>102.098432</td>\n","      <td>101.837071</td>\n","      <td>102.855631</td>\n","      <td>100.714645</td>\n","      <td>101.802491</td>\n","      <td>2.105607e+07</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>17.517590</td>\n","      <td>23.010000</td>\n","      <td>23.320000</td>\n","      <td>22.730000</td>\n","      <td>23.090000</td>\n","      <td>7.425600e+06</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>27.272247</td>\n","      <td>33.022500</td>\n","      <td>33.335001</td>\n","      <td>32.660001</td>\n","      <td>32.930000</td>\n","      <td>2.352038e+07</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>56.900787</td>\n","      <td>62.660000</td>\n","      <td>63.100000</td>\n","      <td>62.289999</td>\n","      <td>62.700001</td>\n","      <td>3.141700e+07</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>193.937420</td>\n","      <td>201.122501</td>\n","      <td>203.549995</td>\n","      <td>197.272495</td>\n","      <td>200.000004</td>\n","      <td>4.576332e+07</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>380.619812</td>\n","      <td>382.700012</td>\n","      <td>384.299988</td>\n","      <td>378.160004</td>\n","      <td>383.760010</td>\n","      <td>3.193179e+08</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1a1a41cd-af06-48f3-9daf-8d585ca73370')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1a1a41cd-af06-48f3-9daf-8d585ca73370 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1a1a41cd-af06-48f3-9daf-8d585ca73370');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-241c57da-6bef-47fa-9b73-234e7ff19487\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-241c57da-6bef-47fa-9b73-234e7ff19487')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-241c57da-6bef-47fa-9b73-234e7ff19487 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": [\n        \"Adj Close\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1206.1111175676958,\n        \"min\": 17.517589569091797,\n        \"max\": 3522.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          109.3852529271227,\n          56.900787353515625,\n          3522.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Close\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1204.4308586739423,\n        \"min\": 23.010000228881836,\n        \"max\": 3522.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          115.29392110617712,\n          62.65999984741211,\n          3522.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"High\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1204.1197000211034,\n        \"min\": 23.31999969482422,\n        \"max\": 3522.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          116.39217211589565,\n          63.10000038146973,\n          3522.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Low\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1204.871990172073,\n        \"min\": 22.729999542236328,\n        \"max\": 3522.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          114.08140253167745,\n          62.28999900817871,\n          3522.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Open\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1204.4587740457273,\n        \"min\": 23.09000015258789,\n        \"max\": 3522.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          115.25333618887576,\n          62.70000076293945,\n          3522.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Volume\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 105552016.88260649,\n        \"min\": 3522.0,\n        \"max\": 319317900.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          37277881.77172061,\n          31417000.0,\n          3522.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["data.isnull().sum()# checking for missing values"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":304},"id":"6MEOOqQSbEsQ","executionInfo":{"status":"ok","timestamp":1730828680721,"user_tz":0,"elapsed":371,"user":{"displayName":"Timo Parker","userId":"11961905666203941570"}},"outputId":"290a416f-07ea-4278-8d1c-46a046e56191"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Price      Ticker\n","Adj Close  MSFT      0\n","Close      MSFT      0\n","High       MSFT      0\n","Low        MSFT      0\n","Open       MSFT      0\n","Volume     MSFT      0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","    <tr>\n","      <th>Price</th>\n","      <th>Ticker</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Adj Close</th>\n","      <th>MSFT</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Close</th>\n","      <th>MSFT</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>High</th>\n","      <th>MSFT</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Low</th>\n","      <th>MSFT</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Open</th>\n","      <th>MSFT</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Volume</th>\n","      <th>MSFT</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["data.reset_index(drop=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":629},"id":"0aRWKGeHbfxj","executionInfo":{"status":"ok","timestamp":1730828986282,"user_tz":0,"elapsed":358,"user":{"displayName":"Timo Parker","userId":"11961905666203941570"}},"outputId":"526891dc-777b-471c-8499-50ef89cd3939"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Price                       Date   Adj Close       Close        High  \\\n","Ticker                                  MSFT        MSFT        MSFT   \n","0      2010-01-04 00:00:00+00:00   23.347326   30.950001   31.100000   \n","1      2010-01-05 00:00:00+00:00   23.354864   30.959999   31.100000   \n","2      2010-01-06 00:00:00+00:00   23.211536   30.770000   31.080000   \n","3      2010-01-07 00:00:00+00:00   22.970140   30.450001   30.700001   \n","4      2010-01-08 00:00:00+00:00   23.128555   30.660000   30.879999   \n","...                          ...         ...         ...         ...   \n","3517   2023-12-22 00:00:00+00:00  372.543915  374.579987  375.179993   \n","3518   2023-12-26 00:00:00+00:00  372.623505  374.660004  376.940002   \n","3519   2023-12-27 00:00:00+00:00  372.036713  374.070007  375.059998   \n","3520   2023-12-28 00:00:00+00:00  373.240112  375.279999  376.459991   \n","3521   2023-12-29 00:00:00+00:00  373.995972  376.040009  377.160004   \n","\n","Price          Low        Open    Volume  \n","Ticker        MSFT        MSFT      MSFT  \n","0        30.590000   30.620001  38409100  \n","1        30.639999   30.850000  49749600  \n","2        30.520000   30.879999  58182400  \n","3        30.190001   30.629999  50559700  \n","4        30.240000   30.280001  51197400  \n","...            ...         ...       ...  \n","3517    372.709991  373.679993  17091100  \n","3518    373.500000  375.000000  12673100  \n","3519    372.809998  373.690002  14905400  \n","3520    374.160004  375.369995  14327000  \n","3521    373.480011  376.000000  18723000  \n","\n","[3522 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-0e4534c3-48f8-4c72-a24d-d34b73fe7a53\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th>Price</th>\n","      <th>Date</th>\n","      <th>Adj Close</th>\n","      <th>Close</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Open</th>\n","      <th>Volume</th>\n","    </tr>\n","    <tr>\n","      <th>Ticker</th>\n","      <th></th>\n","      <th>MSFT</th>\n","      <th>MSFT</th>\n","      <th>MSFT</th>\n","      <th>MSFT</th>\n","      <th>MSFT</th>\n","      <th>MSFT</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2010-01-04 00:00:00+00:00</td>\n","      <td>23.347326</td>\n","      <td>30.950001</td>\n","      <td>31.100000</td>\n","      <td>30.590000</td>\n","      <td>30.620001</td>\n","      <td>38409100</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2010-01-05 00:00:00+00:00</td>\n","      <td>23.354864</td>\n","      <td>30.959999</td>\n","      <td>31.100000</td>\n","      <td>30.639999</td>\n","      <td>30.850000</td>\n","      <td>49749600</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2010-01-06 00:00:00+00:00</td>\n","      <td>23.211536</td>\n","      <td>30.770000</td>\n","      <td>31.080000</td>\n","      <td>30.520000</td>\n","      <td>30.879999</td>\n","      <td>58182400</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2010-01-07 00:00:00+00:00</td>\n","      <td>22.970140</td>\n","      <td>30.450001</td>\n","      <td>30.700001</td>\n","      <td>30.190001</td>\n","      <td>30.629999</td>\n","      <td>50559700</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2010-01-08 00:00:00+00:00</td>\n","      <td>23.128555</td>\n","      <td>30.660000</td>\n","      <td>30.879999</td>\n","      <td>30.240000</td>\n","      <td>30.280001</td>\n","      <td>51197400</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3517</th>\n","      <td>2023-12-22 00:00:00+00:00</td>\n","      <td>372.543915</td>\n","      <td>374.579987</td>\n","      <td>375.179993</td>\n","      <td>372.709991</td>\n","      <td>373.679993</td>\n","      <td>17091100</td>\n","    </tr>\n","    <tr>\n","      <th>3518</th>\n","      <td>2023-12-26 00:00:00+00:00</td>\n","      <td>372.623505</td>\n","      <td>374.660004</td>\n","      <td>376.940002</td>\n","      <td>373.500000</td>\n","      <td>375.000000</td>\n","      <td>12673100</td>\n","    </tr>\n","    <tr>\n","      <th>3519</th>\n","      <td>2023-12-27 00:00:00+00:00</td>\n","      <td>372.036713</td>\n","      <td>374.070007</td>\n","      <td>375.059998</td>\n","      <td>372.809998</td>\n","      <td>373.690002</td>\n","      <td>14905400</td>\n","    </tr>\n","    <tr>\n","      <th>3520</th>\n","      <td>2023-12-28 00:00:00+00:00</td>\n","      <td>373.240112</td>\n","      <td>375.279999</td>\n","      <td>376.459991</td>\n","      <td>374.160004</td>\n","      <td>375.369995</td>\n","      <td>14327000</td>\n","    </tr>\n","    <tr>\n","      <th>3521</th>\n","      <td>2023-12-29 00:00:00+00:00</td>\n","      <td>373.995972</td>\n","      <td>376.040009</td>\n","      <td>377.160004</td>\n","      <td>373.480011</td>\n","      <td>376.000000</td>\n","      <td>18723000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3522 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0e4534c3-48f8-4c72-a24d-d34b73fe7a53')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0e4534c3-48f8-4c72-a24d-d34b73fe7a53 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0e4534c3-48f8-4c72-a24d-d34b73fe7a53');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ff8609b5-a3de-4f84-9718-cdd7e21c5f21\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ff8609b5-a3de-4f84-9718-cdd7e21c5f21')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ff8609b5-a3de-4f84-9718-cdd7e21c5f21 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data\",\n  \"rows\": 3522,\n  \"fields\": [\n    {\n      \"column\": [\n        \"Date\",\n        \"\"\n      ],\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2010-01-04 00:00:00+00:00\",\n        \"max\": \"2023-12-29 00:00:00+00:00\",\n        \"num_unique_values\": 3522,\n        \"samples\": [\n          \"2022-08-30 00:00:00+00:00\",\n          \"2017-06-30 00:00:00+00:00\",\n          \"2021-10-14 00:00:00+00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Adj Close\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 102.09843205107991,\n        \"min\": 17.517589569091797,\n        \"max\": 380.61981201171875,\n        \"num_unique_values\": 3341,\n        \"samples\": [\n          23.676240921020508,\n          104.72845458984375,\n          22.793224334716797\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Close\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 101.83707098643988,\n        \"min\": 23.010000228881836,\n        \"max\": 382.70001220703125,\n        \"num_unique_values\": 2966,\n        \"samples\": [\n          304.3599853515625,\n          44.27000045776367,\n          138.88999938964844\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"High\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 102.85563121088869,\n        \"min\": 23.31999969482422,\n        \"max\": 384.29998779296875,\n        \"num_unique_values\": 2943,\n        \"samples\": [\n          47.970001220703125,\n          56.099998474121094,\n          297.5400085449219\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Low\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 100.71464493881665,\n        \"min\": 22.729999542236328,\n        \"max\": 378.1600036621094,\n        \"num_unique_values\": 2973,\n        \"samples\": [\n          290.2699890136719,\n          344.30999755859375,\n          212.85000610351562\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Open\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 101.8024913641519,\n        \"min\": 23.09000015258789,\n        \"max\": 383.760009765625,\n        \"num_unique_values\": 2984,\n        \"samples\": [\n          304.4200134277344,\n          86.30000305175781,\n          48.63999938964844\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"Volume\",\n        \"MSFT\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21056070,\n        \"min\": 7425600,\n        \"max\": 319317900,\n        \"num_unique_values\": 3510,\n        \"samples\": [\n          26660300,\n          35433700,\n          20184800\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["for col in data.columns[1:]:\n","  print(f'Checking stationary of {col} column')\n","  adf = adfuller(data[col])\n","  print(f'ADF Statistic: {adf[0]}')\n","  print(f'p-value: {adf[1]}')\n","  if adf[1] < 0.5:\n","    print(f\"The '{col}' column series is stationary\")\n","  else:\n","    print(f\"The '{col}' column series is not stationary\")\n","  print('-'*100)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dNzDXMC-cqd6","executionInfo":{"status":"ok","timestamp":1730829121167,"user_tz":0,"elapsed":4070,"user":{"displayName":"Timo Parker","userId":"11961905666203941570"}},"outputId":"fa20cf5c-4259-4607-c433-1af3b7f70105"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Checking stationary of ('Adj Close', 'MSFT') column\n","ADF Statistic: 1.8574194535111144\n","p-value: 0.9984563507216871\n","The '('Adj Close', 'MSFT')' column series is not stationary\n","----------------------------------------------------------------------------------------------------\n","Checking stationary of ('Close', 'MSFT') column\n","ADF Statistic: 1.7188759855052083\n","p-value: 0.998173786671935\n","The '('Close', 'MSFT')' column series is not stationary\n","----------------------------------------------------------------------------------------------------\n","Checking stationary of ('High', 'MSFT') column\n","ADF Statistic: 1.8657138253122418\n","p-value: 0.9984708181940969\n","The '('High', 'MSFT')' column series is not stationary\n","----------------------------------------------------------------------------------------------------\n","Checking stationary of ('Low', 'MSFT') column\n","ADF Statistic: 1.9435702788142049\n","p-value: 0.998594982299505\n","The '('Low', 'MSFT')' column series is not stationary\n","----------------------------------------------------------------------------------------------------\n","Checking stationary of ('Open', 'MSFT') column\n","ADF Statistic: 1.5303583318040022\n","p-value: 0.9976328480267352\n","The '('Open', 'MSFT')' column series is not stationary\n","----------------------------------------------------------------------------------------------------\n","Checking stationary of ('Volume', 'MSFT') column\n","ADF Statistic: -4.1412657861330215\n","p-value: 0.0008271028491930918\n","The '('Volume', 'MSFT')' column series is stationary\n","----------------------------------------------------------------------------------------------------\n"]}]}]}